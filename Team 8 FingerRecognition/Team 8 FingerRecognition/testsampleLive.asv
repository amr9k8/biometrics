function [ matchedperosn,res,matching_score] = testsample( sample_test )
%TESTSAMPLE Summary of this function goes here
%   Detailed explanation goes here

matching_score=[];

for p=1:30
TrainDistances1 = []
TrainDistances2 = []
TrainDistances3 = []
TrainDistances4 = []
personNum = num2str(p)
%personNum = '2';
folder = strcat('train/',personNum);
object = dir (folder);
for i =3:6
img_train= object(i).name
filepath = strcat(folder,'/',img_train);
thin_image = process_img(filepath);
if      i ==3
    [bifurcation_y1 ,bifurcation_x1,ridge_y1,ridge_x1]=Minutiae_extraction3(thin_image);
    TrainDistances1 = DistEuclidian(bifurcation_x1,bifurcation_y1);
elseif  i == 4
    [bifurcation_y2 ,bifurcation_x2,ridge_y2,ridge_x2]=Minutiae_extraction3(thin_image);
    TrainDistances2 = DistEuclidian(bifurcation_x2,bifurcation_y2);
elseif  i == 5
    [bifurcation_y3 ,bifurcation_x3,ridge_y3,ridge_x3]=Minutiae_extraction3(thin_image);
    TrainDistances3 = DistEuclidian(bifurcation_x3,bifurcation_y3);
elseif  i == 6
    [bifurcation_y4 ,bifurcation_x4,ridge_y4,ridge_x4]=Minutiae_extraction3(thin_image);
    TrainDistances4 = DistEuclidian(bifurcation_x4,bifurcation_y4);
    
end
            
end



    %%% test 
    maxx=0;
    matchedperosn =0;

    test_img = strcat('test/',sample_test);
    test_image = process_img(test_img);
    [bifurcation_y7 ,bifurcation_x7,ridge_y7,ridge_x7]=Minutiae_extraction3(test_image);
     TestDistances = DistEuclidian(bifurcation_x7,bifurcation_y7);

    score1 = compare_distances(TrainDistances1,TestDistances);
    score2 = compare_distances(TrainDistances2,TestDistances);
    score3 = compare_distances(TrainDistances3,TestDistances);
    score4 = compare_distances(TrainDistances4,TestDistances);
    avgscore = (score1 + score2 +score3+score4 )/4;
    matching_score =[matching_score,avgscore];
     
end

[res,matchedperosn]=max(matching_score);
if(mean(matching_score))
    


end

